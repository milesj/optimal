"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1370],{5318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1374:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(5773),a=t(808),i=(t(7378),t(5318)),o=["components"],l={title:"Predicates"},c=void 0,s={unversionedId:"predicates",id:"predicates",isDocsHomePage:!1,title:"Predicates",description:"A predicate is a functional wrapper around a schema that returns a boolean instead",source:"@site/docs/predicates.md",sourceDirName:".",slug:"/predicates",permalink:"/docs/predicates",editUrl:"https://github.com/milesj/optimal/edit/master/website/docs/predicates.md",tags:[],version:"current",frontMatter:{title:"Predicates"},sidebar:"docs",previous:{title:"Schemas",permalink:"/docs/schemas"},next:{title:"Comparison",permalink:"/docs/comparison"}},p=[{value:"Null and undefined handling",id:"null-and-undefined-handling",children:[]}],u={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A predicate is a functional wrapper around a ",(0,i.kt)("a",{parentName:"p",href:"/docs/schemas"},"schema")," that returns a boolean instead\nof throwing an error. This is a simple mechanism for providing a better developer experience when\nhandling control flow."),(0,i.kt)("p",null,"To create a predicate, import the ",(0,i.kt)("a",{parentName:"p",href:"/api/optimal/function/createPredicate"},(0,i.kt)("inlineCode",{parentName:"a"},"createPredicate()")),"\nfunction, wrap an existing schema, and assign to a variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { createPredicate, string } from 'optimal';\n\nconst urlSchema = string()\n    .notEmpty()\n    .match(/^https?:\\/\\//);\n\nconst isUrl = createPredicate(urlSchema);\n")),(0,i.kt)("p",null,"This newly assigned variable is a function that can be executed to validate a provided value. If\nthere are no validation errors, ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," is returned, otherwise ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," is returned."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"if (isUrl(value)) {\n    // Do something with the URL\n}\n")),(0,i.kt)("h2",{id:"null-and-undefined-handling"},"Null and undefined handling"),(0,i.kt)("p",null,"Unlike schemas, a predicate will ",(0,i.kt)("em",{parentName:"p"},"always")," return false for ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," values, regardless\nof the schema's nullable and undefinable states. We do this because a predicate ensures a truthy\nvalue, which is the most common use case and expectation."),(0,i.kt)("p",null,"Let's take the previous example, and demonstrate this with nullability."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const urlSchema = string()\n    .notEmpty()\n    .match(/^https?:\\/\\//)\n    .nullable();\n\nconst isUrl = createPredicate(urlSchema);\n\n// Will always returns false, since null can never be a URL\nif (isUrl(null)) {\n}\n")),(0,i.kt)("p",null,"If for some reason you ",(0,i.kt)("em",{parentName:"p"},"need")," to accept ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," values, handle them explicitly\noutside of the predicate."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"if (value === null || isUrl(value)) {\n    // Handle both cases\n}\n")))}d.isMDXComponent=!0}}]);