// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Builder and() errors if no keys are defined 1`] = `"AND requires a list of field names."`;

exports[`Builder and() errors if not all options are defined 1`] = `"All of these fields must be defined: foo, bar, baz"`;

exports[`Builder checkType() array errors on non-arrays 1`] = `"Invalid field \\"key\\". Must be an array."`;

exports[`Builder checkType() boolean errors on non-booleans 1`] = `"Invalid field \\"key\\". Must be a boolean."`;

exports[`Builder checkType() function errors on non-functions 1`] = `"Invalid field \\"key\\". Must be a function."`;

exports[`Builder checkType() number errors on non-numbers 1`] = `"Invalid field \\"key\\". Must be a number."`;

exports[`Builder checkType() object errors on arrays 1`] = `"Invalid field \\"key\\". Must be a plain object."`;

exports[`Builder checkType() object errors on non-objects 1`] = `"Invalid field \\"key\\". Must be a plain object."`;

exports[`Builder checkType() object errors on nulls 1`] = `"Invalid field \\"key\\". Null is not allowed."`;

exports[`Builder checkType() string errors on non-strings 1`] = `"Invalid field \\"key\\". Must be a string."`;

exports[`Builder custom() is passed entire options object 1`] = `"Invalid field \\"error\\". This will error!"`;

exports[`Builder custom() triggers callback function 1`] = `"Invalid field \\"key\\". This will error!"`;

exports[`Builder deprecate() errors for empty value 1`] = `"A non-empty string is required for deprecated messages."`;

exports[`Builder deprecate() errors for non-string value 1`] = `"A non-empty string is required for deprecated messages."`;

exports[`Builder errors if default value is undefined 1`] = `"A default value for type \\"string\\" is required."`;

exports[`Builder invariant() errors if condition is false 1`] = `"Failure"`;

exports[`Builder invariant() includes a class name 1`] = `"Invalid FooBar field \\"foo.bar\\". Failure"`;

exports[`Builder invariant() includes a class name when no path 1`] = `"FooBar. Failure"`;

exports[`Builder invariant() includes a file and class name 1`] = `"Invalid FooBar field \\"foo.bar\\" in package.json. Failure"`;

exports[`Builder invariant() includes a file name 1`] = `"Invalid field \\"foo.bar\\" in package.json. Failure"`;

exports[`Builder invariant() includes an option path 1`] = `"Invalid field \\"foo.bar\\". Failure"`;

exports[`Builder message() errors for empty value 1`] = `"A non-empty string is required for custom messages."`;

exports[`Builder message() errors for non-string value 1`] = `"A non-empty string is required for custom messages."`;

exports[`Builder nullable() errors if field is undefined 1`] = `"Invalid field \\"key\\". Null is not allowed."`;

exports[`Builder only() errors if default value is not the same type 1`] = `"Only requires a default string value."`;

exports[`Builder only() errors if value doesnt match the default value 1`] = `"Invalid field \\"key\\". Value may only be \\"foo\\"."`;

exports[`Builder or() errors if no keys are defined 1`] = `"OR requires a list of field names."`;

exports[`Builder or() errors if not 1 option is defined 1`] = `"At least one of these fields must be defined: foo, bar, baz"`;

exports[`Builder required() errors if field is undefined 1`] = `"Invalid field \\"key\\". Field is required and must be defined."`;

exports[`Builder runChecks() errors if value passed is defined and builder is never 1`] = `"Invalid field \\"key\\". Field should never be used."`;

exports[`Builder runChecks() errors if value passed is null and builder is non-nullable 1`] = `"Invalid field \\"key\\". Null is not allowed."`;

exports[`Builder runChecks() errors if value passed is undefined and builder is required 1`] = `"Invalid field \\"key\\". Field is required and must be defined."`;

exports[`Builder runChecks() runs default type of check 1`] = `"Invalid field \\"key\\". Must be a string."`;

exports[`Builder runChecks() uses custom message 1`] = `"Invalid field \\"key\\". Oops, something is broken."`;

exports[`Builder xor() errors if more than 1 option is defined 1`] = `"Only one of these fields may be defined: foo, bar, baz"`;

exports[`Builder xor() errors if no keys are defined 1`] = `"XOR requires a list of field names."`;

exports[`Builder xor() errors if no options are defined 1`] = `"Only one of these fields may be defined: foo, bar, baz"`;

exports[`func() errors if a non-function value is used 1`] = `"Invalid field \\"key\\". Must be a function."`;
